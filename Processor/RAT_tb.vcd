$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module DependencyMatrixTB $end
   $var wire 32 : CLK_PERIOD [31:0] $end
   $var real 64 ; DUTY_CYCLE $end
   $var wire 32 = NUM_ROWS [31:0] $end
   $var wire 32 = NUM_COLS [31:0] $end
   $var wire 1 8 clk $end
   $var wire 1 # rst $end
   $var wire 1 $ w_en $end
   $var wire 3 % w_row_index [2:0] $end
   $var wire 8 & set_lines [7:0] $end
   $var wire 8 ' clear_lines [7:0] $end
   $var wire 1 ( free_en $end
   $var wire 3 ) free_row_index [2:0] $end
   $var wire 8 + ready_vector [7:0] $end
   $var wire 1 * clear_en $end
   $var wire 32 9 cycle_count [31:0] $end
   $scope module DUT $end
    $var wire 32 > NUM_ROWS [31:0] $end
    $var wire 32 > NUM_COLS [31:0] $end
    $var wire 1 8 clk $end
    $var wire 1 # rst $end
    $var wire 1 $ w_en $end
    $var wire 3 % w_row_index [2:0] $end
    $var wire 8 & set_lines [7:0] $end
    $var wire 1 * clear_en $end
    $var wire 8 ' clear_lines [7:0] $end
    $var wire 1 ( free_en $end
    $var wire 3 ) free_row_index [2:0] $end
    $var wire 8 + ready_vector [7:0] $end
    $var wire 8 , bit_matrix[0] [7:0] $end
    $var wire 8 - bit_matrix[1] [7:0] $end
    $var wire 8 . bit_matrix[2] [7:0] $end
    $var wire 8 / bit_matrix[3] [7:0] $end
    $var wire 8 0 bit_matrix[4] [7:0] $end
    $var wire 8 1 bit_matrix[5] [7:0] $end
    $var wire 8 2 bit_matrix[6] [7:0] $end
    $var wire 8 3 bit_matrix[7] [7:0] $end
    $var wire 8 4 row_valid [7:0] $end
    $scope module unnamedblk1 $end
     $var wire 32 5 i [31:0] $end
    $upscope $end
    $scope module unnamedblk2 $end
     $var wire 32 6 i [31:0] $end
     $scope module unnamedblk3 $end
      $var wire 32 7 j [31:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b000 %
b00000000 &
b00000000 '
0(
b000 )
0*
b00000000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
08
b00000000000000000000000000000000 9
b00000000000000000000000000010100 :
r0.5 ;
b00000000000000000000000000001000 =
b00000000000000000000000000001000 >
#10000
b00000000000000000000000000000001 9
#20000
#30000
1$
b111 %
b01000010 &
b01000010 3
b10000000 4
18
b00000000000000000000000000000010 9
#40000
08
#50000
b000 %
b00000000 &
b00000001 +
b10000001 4
18
b00000000000000000000000000000011 9
#60000
08
#70000
0$
18
b00000000000000000000000000000100 9
#80000
08
#90000
1(
b00000000 +
b10000000 4
18
b00000000000000000000000000000101 9
#100000
08
#110000
0(
18
b00000000000000000000000000000110 9
#120000
08
#130000
b01000000 '
1*
b00000010 3
b00000000000000000000000000001000 6
b00000000000000000000000000001000 7
18
b00000000000000000000000000000111 9
#140000
08
#150000
b00000010 '
b10000000 +
b00000000 3
18
b00000000000000000000000000001000 9
#160000
08
#170000
0*
18
b00000000000000000000000000001001 9
#180000
08
#190000
18
b00000000000000000000000000001010 9
#200000
08
#210000
18
b00000000000000000000000000001011 9
#220000
08
